#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: fabiomacedomendes@gmail.com\n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: Fábio Mendes <fabiomacedomendes@gmail.com>\n"
"Language-Team: \n"
"Language: es_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 2.0.1\n"

#. range.name
msgid "range"
msgstr "distancia"

#. range.doc
msgid ""
"range(stop) -> range object\n"
"range(start, stop[, step]) -> range object\n"
"\n"
"Return an object that produces a sequence of integers from start "
"(inclusive)\n"
"to stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\n"
"start defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\n"
"These are exactly the valid indices for a list of 4 elements.\n"
"When step is given, it specifies the increment (or decrement)."
msgstr ""
"rango (stop) -> rango de objetos (start, stop [, step]) -> range object\n"
"\n"
"Devuelve un objeto que produce una secuencia de enteros desde start "
"(inclusive) hasta stop (exclusivo) por paso. (I, j) produce i, i + 1, i + "
"2, ..., j-1. El valor predeterminado de arranque es 0 y se omite la parada! "
"(4) produce 0, 1, 2, 3. Estos son exactamente los índices válidos para una "
"lista de 4 elementos. Cuando se da paso, especifica el incremento (o "
"decremento)."

#. range.args
#. concatenate.args
#. alert.args
msgid "args"
msgstr "args"

#. sleep.name
msgid "sleep"
msgstr "dormir"

#. sleep.doc
msgid ""
"sleep(seconds)\n"
"\n"
"Delay execution for a given number of seconds.  The argument may be\n"
"a floating point number for subsecond precision."
msgstr ""
"dormir (segundos)\n"
"\n"
"Retrasar la ejecución por un número determinado de segundos. El argumento "
"puede ser un número de coma flotante para la precisión del subconjunto."

#. exit.name
msgid "exit"
msgstr "salida"

#. exit.doc
msgid "Finish program execution."
msgstr "Finalizar la ejecución del programa."

#. exit.args
msgid "msg"
msgstr "msg"

#. concatenate.name
msgid "concatenate"
msgstr "concatenar"

#. concatenate.doc
msgid ""
"Convert argument to string and concatenate.\n"
"\n"
"If only one argument is passed, assumes it is a sequence.\n"
"\n"
"Examples:\n"
"    >>> concatenate('x = ', 2)\n"
"    'x = 2'\n"
"    >>> concatenate([1, 2, 3, 4])\n"
"    '1234'"
msgstr ""
"Convierta el argumento en cadena y concatene.\n"
"\n"
"Si sólo se pasa un argumento, se supone que es una secuencia.\n"
"\n"
"Ejemplos:\n"
"    >>> concatenar ('x =', 2)\n"
"    'X = 2'\n"
"    >>> concatenar ([1, 2, 3, 4])\n"
"    '1234'"

#. join.name
msgid "join"
msgstr "unirse"

#. join.doc
msgid ""
"Similar to concatenate(), but takes an extra separator as first argument\n"
"argument.\n"
"\n"
"Examples:\n"
"    >>> join(', ', 1, 2, 3)\n"
"    '1, 2, 3'"
msgstr ""
"Similar a concatenate (), pero toma un separador extra como argumento del "
"primer argumento.\n"
"\n"
"Ejemplos:\n"
"    >>> join (',', 1, 2, 3)\n"
"    '1, 2, 3'"

#. join.args
msgid "separator, args"
msgstr "separador, args"

#. format_string.name
msgid "format_string"
msgstr "cadena_de_formato"

#. format_string.doc
msgid ""
"Format text inserting parameters in the wildcard positions.\n"
"\n"
"There are two different syntax for string formatting. The first is based\n"
"on C and uses symbols such as %s, %f, %d to delimit insertion points.\n"
"\n"
">>> format_string('%i != %.2f', 42, 43)\n"
"'42 != 43.00'\n"
"\n"
"The second uses curly braces.\n"
"\n"
">>> format_string('{0} != {1}', 42, 43)\n"
"'42 != 43'"
msgstr ""
"Formatear texto insertando parámetros en las posiciones de comodín.\n"
"\n"
"Hay dos sintaxis diferente para el formato de cadena. El primero se basa en "
"C y utiliza símbolos como% s,% f,% d para delimitar puntos de inserción.\n"
"\n"
">>> format_string ('% i! =% .2f', 42, 43) '42! = 43.00 '\n"
"\n"
"El segundo utiliza llaves.\n"
"\n"
">>> format_string ('{0}! = {1}', 42, 43) '42! = 43 '"

#. format_string.args
msgid "string, args, kwargs"
msgstr "cuerda, args, kwargs"

#. print.name
msgid "print"
msgstr "imprimir"

#. print.doc
msgid ""
"Prints the object or text provided on the screen.\n"
"\n"
"If called with multiple arguments, prints them in sequence, separating\n"
"them with a white space.\n"
"\n"
"Examples:\n"
"    >>> print(\"Hello world!\")\n"
"    Hello World!"
msgstr ""
"Muestra el objeto o texto proporcionado en la pantalla.\n"
"\n"
"Si se llama con varios argumentos, los imprime en secuencia, separándolos "
"con un espacio en blanco.\n"
"\n"
"Ejemplos:\n"
"    >>> show (\"¡Hola mundo!\")\n"
"    Hola Mundo!"

#. print.args
msgid "args, kwargs"
msgstr "args, kwargs"

#. alert.name
msgid "alert"
msgstr "alerta"

#. alert.doc
msgid ""
"Similar to the `show` function, but displays the resulting message in a\n"
"dialog box."
msgstr ""
"Similar a la función `show`, pero muestra el mensaje resultante en un cuadro "
"de diálogo."

#. print_formatted.name
msgid "print_formatted"
msgstr "mostrar_el_formato"

#. print_formatted.doc
msgid "Displays a string after applying the provided formatting arguments."
msgstr ""
"Muestra una cadena después de aplicar los argumentos de formato "
"proporcionados."

#. print_formatted.args
msgid "text, args, kwargs"
msgstr "texto, args, kwargs"

#. read_text.name
msgid "read_text"
msgstr "leer_texto"

#. read_text.doc
msgid ""
"Prompts the user for a text entry.\n"
"\n"
"Examples:\n"
"    >>> name = read_text('Your name:')\n"
"    >>> show(\"Hello,\" + name)  # the user types \"Maria\"\n"
"    Hello Maria"
msgstr ""
"Solicita al usuario una entrada de texto.\n"
"\n"
"Ejemplos:\n"
"    >>> name = read_text ('Tu nombre:')\n"
"    >>> show (\"Hola,\" + nombre) # el usuario escribe \"Maria\"\n"
"    Hola Maria"

#. read_text.args
msgid "message"
msgstr "mensaje"

#. read_number.name
msgid "read_number"
msgstr "leer_número"

#. read_number.doc
msgid ""
"Prompts the user for a numeric entry.\n"
"\n"
"Examples:\n"
"    >>> x = read_number('A number:')  # user types 2...\n"
"    >>> x + 40\n"
"    42"
msgstr ""
"Solicita al usuario una entrada numérica.\n"
"\n"
"Ejemplos:\n"
"    >>> x = read_number ('A number:') # tipos de usuario 2 ...\n"
"    X mas 40\n"
"    42"

#. read_number.args
msgid "message, text, num"
msgstr "mensaje, texto, numero"

#. read_file.name
msgid "read_file"
msgstr "lee_el_archivo"

#. read_file.doc
msgid ""
"Reads the content from a text file and returns it as string.\n"
"\n"
"Examples:\n"
"    >>> data = read_file(\"foo.txt\")"
msgstr ""
"Lee el contenido de un archivo de texto y lo devuelve como cadena.\n"
"\n"
"Ejemplos:\n"
"    >>> data = read_file (\"foo.txt\")"

#. read_file.args
msgid "file"
msgstr "archivo"

#. save_in_file.name
msgid "save_in_file"
msgstr "guardar_en_archivo"

#. save_in_file.doc
msgid ""
"Saves the text content to the indicated file, deleting any previous "
"content.\n"
"\n"
"WARNING! If the given file exists, this function will overwrite your\n"
"content without asking!\n"
"\n"
"Examples:\n"
"    >>> save_in_file(data, \"foo.txt\")"
msgstr ""
"Guarda el contenido del texto en el archivo indicado, eliminando cualquier "
"contenido anterior.\n"
"\n"
"¡ADVERTENCIA! ¡Si el archivo dado existe, esta función sobrescribirá su "
"contenido sin preguntar!\n"
"\n"
"Ejemplos:\n"
"    >>> save_in_file (datos, \"foo.txt\")"

#. save_in_file.args
msgid "text, file, F"
msgstr "texto, archivo, _F"

#. pause.name
msgid "pause"
msgstr "pausa"

#. pause.doc
msgid "Stops execution until the user presses the <return> key."
msgstr "Detiene la ejecución hasta que el usuario presione la tecla <return>."

#. Turtle.name
msgid "Turtle"
msgstr "Tortuga"

#. Turtle.doc
msgid ""
"Turtle representation on client.\n"
"\n"
"Client knows the pos, heading, avatar and a dictionary of arbitrary meta\n"
"values. The client holds a reference to a connection and each method simply\n"
"sends messages through this connection object."
msgstr ""
"Representación de tortugas en el cliente.\n"
"\n"
"El cliente conoce la pos, título, avatar y un diccionario de valores meta "
"arbitrarios. El cliente tiene una referencia a una conexión y cada método "
"simplemente envía mensajes a través de este objeto de conexión."

#. Turtle:back.name
#. Turtle:backward.name
#. Turtle:bk.name
#. backward.name
msgid "backward"
msgstr "hacia_atrás"

#. Turtle:back.doc
#. Turtle:backward.doc
#. Turtle:bk.doc
#. backward.doc
msgid ""
"Move the turtle backward by the given step size (in pixels).\n"
"\n"
"Aliases: backward | back | bk"
msgstr ""
"Mover a la tortuga hacia atrás por el tamaño de paso dado (en píxeles).\n"
"\n"
"Alias: hacia atrás | Atrás | Bk"

#. Turtle:back.args
#. Turtle:backward.args
#. Turtle:bk.args
#. Turtle:fd.args
#. Turtle:forward.args
msgid "self, step"
msgstr "self, passo"

#. Turtle:clear.name
#. clear.name
msgid "clear"
msgstr "claro"

#. Turtle:clear.doc
#. clear.doc
msgid "Clear all drawings made by turtle."
msgstr "Borrar todos los dibujos hechos por la tortuga."

#. Turtle:clear.args
#. Turtle:getavatar.args
#. Turtle:getcolor.args
#. Turtle:getfillcolor.args
#. Turtle:getheading.args
#. Turtle:getpos.args
#. Turtle:getwidth.args
#. Turtle:hide.args
#. Turtle:isdown.args
#. Turtle:ishidden.args
#. Turtle:isvisible.args
#. Turtle:pd.args
#. Turtle:pendown.args
#. Turtle:penup.args
#. Turtle:pu.args
#. Turtle:reset.args
#. Turtle:show.args
#. Vec:norm.args
#. Vec:normalized.args
msgid "self"
msgstr "yo"

#. Turtle:color
msgid "color"
msgstr "color"

#. Turtle:drawing
msgid "drawing"
msgstr "dibujo"

#. Turtle:fd.name
#. Turtle:forward.name
#. forward.name
msgid "forward"
msgstr "adelante"

#. Turtle:fd.doc
#. Turtle:forward.doc
#. forward.doc
msgid ""
"Move the turtle forward by the given step size (in pixels).\n"
"\n"
"Aliases: forward | fd"
msgstr ""
"Mover a la tortuga hacia adelante por el tamaño de paso dado (en píxeles).\n"
"\n"
"Alias: adelante | Fd"

#. Turtle:fillcolor
msgid "fillcolor"
msgstr "color de relleno"

#. Turtle:getavatar.name
#. getavatar.name
msgid "getavatar"
msgstr "getavatar"

#. Turtle:getavatar.doc
#. getavatar.doc
msgid "Return a string with the name of the current avatar."
msgstr "Devuelve una cadena con el nombre del avatar actual."

#. Turtle:getcolor.name
#. getcolor.name
msgid "getcolor"
msgstr "obtener_color"

#. Turtle:getcolor.doc
#. getcolor.doc
msgid "Return a tuple of (R, G, B) with the current pen color."
msgstr "Devuelve una tupla de (R, G, B) con el color del lápiz actual."

#. Turtle:getfillcolor.name
#. getfillcolor.name
msgid "getfillcolor"
msgstr "getfillcolor"

#. Turtle:getfillcolor.doc
#. getfillcolor.doc
msgid "Return a tuple of (R, G, B) with the current fill color."
msgstr "Devuelve una tupla de (R, G, B) con el color de relleno actual."

#. Turtle:getheading.name
#. getheading.name
msgid "getheading"
msgstr "getheading"

#. Turtle:getheading.doc
#. getheading.doc
msgid "Return current heading of the turtle (in degrees)."
msgstr "Devuelve el rumbo actual de la tortuga (en grados)."

#. Turtle:getpos.name
#. getpos.name
msgid "getpos"
msgstr "getpos"

#. Turtle:getpos.doc
#. getpos.doc
msgid "Return a vector (x, y) with turtle's position (in pixels)."
msgstr "Devuelve un vector con los componentes dado (x, y)."

#. Turtle:getwidth.name
#. getwidth.name
msgid "getwidth"
msgstr "getwidth"

#. Turtle:getwidth.doc
#. getwidth.doc
msgid "Return the pen width (in pixels):"
msgstr "Devolver el ancho de la pluma (en píxeles):"

#. Turtle:goto.name
#. goto.name
msgid "goto"
msgstr "ir"

#. Turtle:goto.doc
#. goto.doc
msgid ""
"Goes to the given position.\n"
"\n"
"If the pen is down, it draws a line."
msgstr ""
"Va a la posición dada.\n"
"\n"
"Si la pluma está abajo, dibuja una línea."

#. Turtle:goto.args
#. Turtle:jump.args
#. Turtle:setpos.args
msgid "self, x, y, kwds"
msgstr "self, teta, x, y, c, s"

#. Turtle:heading
msgid "heading"
msgstr "título"

#. Turtle:hidden
msgid "hidden"
msgstr "oculto"

#. Turtle:hide.name
#. hide.name
msgid "hide"
msgstr "esconder"

#. Turtle:hide.doc
#. hide.doc
msgid "Hide turtle."
msgstr "Oculta la tortuga."

#. Turtle:isdown.name
#. isdown.name
msgid "isdown"
msgstr "esta_abajo"

#. Turtle:isdown.doc
#. isdown.doc
msgid "Return True if the pen is down or False otherwise."
msgstr "Devuelve True si la pluma está hacia abajo o Falso de lo contrario."

#. Turtle:ishidden.name
#. ishidden.name
msgid "ishidden"
msgstr "está_oculto"

#. Turtle:ishidden.doc
#. ishidden.doc
msgid "Return True if the turtle is not visible."
msgstr "Devuelve verdadero si la tortuga no es visible."

#. Turtle:isvisible.name
#. isvisible.name
msgid "isvisible"
msgstr "es_visible"

#. Turtle:isvisible.doc
#. isvisible.doc
msgid "Return True if the turtle is visible."
msgstr "Devuelve verdadero si la tortuga es visible."

#. Turtle:jump.name
#. jump.name
msgid "jump"
msgstr "saltar"

#. Turtle:jump.doc
#. jump.doc
msgid ""
"Relative movement by the desired position. It *never* draw as line even\n"
"if the pen is down."
msgstr ""
"Movimiento relativo por la posición deseada. Nunca dibuja como línea incluso "
"si la pluma está abajo."

#. Turtle:left.name
#. Turtle:lt.name
#. left.name
msgid "left"
msgstr "izquierda"

#. Turtle:left.doc
#. Turtle:lt.doc
#. left.doc
msgid ""
"Rotate the turtle counter-clockwise by the given angle.\n"
"\n"
"Aliases: left | lt\n"
"\n"
"Negative angles produces clockwise rotation."
msgstr ""
"Gire la tortuga en el sentido contrario a las agujas del reloj por el ángulo "
"dado.\n"
"\n"
"Alias: izquierda | Lt\n"
"\n"
"Los ángulos negativos producen rotación en sentido horario."

#. Turtle:left.args
#. Turtle:lt.args
#. Turtle:right.args
#. Turtle:rt.args
msgid "self, angle"
msgstr "self, invertir"

#. Turtle:pd.name
#. Turtle:pendown.name
#. pendown.name
msgid "pendown"
msgstr "adjuntar"

#. Turtle:pd.doc
#. Turtle:pendown.doc
#. pendown.doc
msgid ""
"Lower the turtle pen so it can draw in the screen.\n"
"\n"
"Aliases: pendown | pd"
msgstr ""
"Baje la pluma de la tortuga para que pueda dibujar en la pantalla.\n"
"\n"
"Alias: pendown | Pd"

#. Turtle:penup.name
#. Turtle:pu.name
#. penup.name
msgid "penup"
msgstr "cerca"

#. Turtle:penup.doc
#. Turtle:pu.doc
#. penup.doc
msgid ""
"Raises the turtle pen so it stops drawing.\n"
"\n"
"Aliases: penup | pu"
msgstr ""
"Levanta la pluma de tortuga para que deje de dibujar.\n"
"\n"
"Alias: penup | Pu"

#. Turtle:pos
msgid "pos"
msgstr "popular"

#. Turtle:reset.name
#. reset.name
msgid "reset"
msgstr "reiniciar"

#. Turtle:reset.doc
#. reset.doc
msgid "Clear all drawings and reset turtle to initial position."
msgstr ""
"Borrar todos los dibujos y restablecer la tortuga a la posición inicial."

#. Turtle:right.name
#. Turtle:rt.name
#. right.name
msgid "right"
msgstr "derecha"

#. Turtle:right.doc
#. Turtle:rt.doc
#. right.doc
msgid ""
"Rotate the turtle clockwise by the given angle.\n"
"\n"
"Aliases: right | rt\n"
"\n"
"Negative angles produces counter-clockwise rotation. Return final\n"
"heading."
msgstr ""
"Gire la tortuga en sentido horario por el ángulo dado.\n"
"\n"
"Alias: derecha | Rt\n"
"\n"
"Los ángulos negativos producen una rotación a la izquierda. Devolver el "
"encabezado final."

#. Turtle:setavatar.name
#. setavatar.name
msgid "setavatar"
msgstr "setavatar"

#. Turtle:setavatar.doc
#. setavatar.doc
msgid "Modifies the turtle avatar."
msgstr "Modifica el avatar de la tortuga."

#. Turtle:setavatar.args
#. Turtle:setcolor.args
#. Turtle:setfillcolor.args
#. Turtle:setheading.args
#. Turtle:setwidth.args
msgid "self, value"
msgstr "self, invertir"

#. Turtle:setcolor.name
#. setcolor.name
msgid "setcolor"
msgstr "setcolor"

#. Turtle:setcolor.doc
#. setcolor.doc
msgid ""
"Modifies the pen color.\n"
"\n"
"Color can be specified as an (R, G, B) tuple or as a hex string or by\n"
"name."
msgstr ""
"Modifica el color del lápiz.\n"
"\n"
"El color se puede especificar como una tupla (R, G, B) o como una cadena "
"hexadecimal o por nombre."

#. Turtle:setfillcolor.name
#. setfillcolor.name
msgid "setfillcolor"
msgstr "setfillcolor"

#. Turtle:setfillcolor.doc
#. setfillcolor.doc
msgid ""
"Modifies the fill color.\n"
"\n"
"Color can be specified as an (R, G, B) tuple or as a hex string or by\n"
"name."
msgstr ""
"Modifica el color de relleno.\n"
"\n"
"El color se puede especificar como una tupla (R, G, B) o como una cadena "
"hexadecimal o por nombre."

#. Turtle:setheading.name
#. setheading.name
msgid "setheading"
msgstr "setheading"

#. Turtle:setheading.doc
#. setheading.doc
msgid "Sets turtle's heading (in degrees)."
msgstr "Seno de un ángulo (en grados)"

#. Turtle:setpos.name
#. setpos.name
msgid "setpos"
msgstr "setpos"

#. Turtle:setpos.doc
#. setpos.doc
msgid ""
"Modifies turtle's position (in pixels)\n"
"\n"
"User can pass the x, y coordinates of the new position or a tuple of\n"
"(x, y) values. This method never draws a line."
msgstr ""
"Modifica la posición de la tortuga (en píxeles)\n"
"\n"
"El usuario puede pasar las coordenadas x, y de la nueva posición o una tupla "
"de valores (x, y). Este método nunca dibuja una línea."

#. Turtle:setwidth.name
#. setwidth.name
msgid "setwidth"
msgstr "setwidth"

#. Turtle:setwidth.doc
#. setwidth.doc
msgid "Modifies the pen width (in pixels)"
msgstr "Modifica el ancho de la pluma (en píxeles)"

#. Turtle:show.name
#. show.name
msgid "show"
msgstr "mostre"

#. Turtle:show.doc
#. show.doc
msgid "Shows a hidden turtle."
msgstr "Muestra una tortuga oculta."

#. Turtle:width
msgid "width"
msgstr "anchura"

#. mainturtle.name
msgid "mainturtle"
msgstr "tortuga_principal"

#. mainturtle.doc
msgid "Returns the main turtle object."
msgstr "Devuelve el objeto tortuga principal."

#. getpos.args
#. setpos.args
#. getheading.args
#. setheading.args
#. getwidth.args
#. setwidth.args
#. getcolor.args
#. setcolor.args
#. getfillcolor.args
#. setfillcolor.args
#. getavatar.args
#. setavatar.args
#. penup.args
#. pendown.args
#. isdown.args
#. isvisible.args
#. ishidden.args
#. hide.args
#. show.args
#. clear.args
#. reset.args
#. goto.args
#. jump.args
#. forward.args
#. backward.args
#. left.args
#. right.args
msgid "args, kwargs, turtle"
msgstr "texto, args, kwargs"

#. cos.name
msgid "cos"
msgstr "cos"

#. cos.doc
msgid "Cosine of an angle (in degrees)"
msgstr "Coseno de un ángulo (en grados)"

#. cos.args
#. sin.args
#. tan.args
msgid "angle"
msgstr "ángulo"

#. sin.name
msgid "sin"
msgstr "pecado"

#. sin.doc
msgid "Sine of an angle (in degrees)"
msgstr "Seno de un ángulo (en grados)"

#. tan.name
msgid "tan"
msgstr "broncearse"

#. tan.doc
msgid "Tangent of an angle (in degrees)"
msgstr "Tangente de un ángulo (en grados)"

#. sqrt.name
msgid "sqrt"
msgstr "sqrt"

#. sqrt.doc
msgid ""
"sqrt(x)\n"
"\n"
"Return the square root of x."
msgstr ""
"sqrt (x)\n"
"\n"
"Devuelve la raíz cuadrada de x."

#. exp.name
msgid "exp"
msgstr "exp"

#. exp.doc
msgid ""
"exp(x)\n"
"\n"
"Return e raised to the power of x."
msgstr ""
"exp (x)\n"
"\n"
"Vuelve e elevado a la potencia de x."

#. log.name
#. ln.name
msgid "log"
msgstr "iniciar_sesión"

#. log.doc
#. ln.doc
msgid ""
"log(x[, base])\n"
"\n"
"Return the logarithm of x to the given base.\n"
"If the base not specified, returns the natural logarithm (base e) of x."
msgstr ""
"log (x [, base])\n"
"\n"
"Devuelve el logaritmo de x a la base dada. Si la base no se especifica, "
"devuelve el logaritmo natural (base e) de x."

#. log10.name
msgid "log10"
msgstr "log10"

#. log10.doc
msgid ""
"log10(x)\n"
"\n"
"Return the base 10 logarithm of x."
msgstr ""
"log10 (x)\n"
"\n"
"Devuelve el logaritmo base 10 de x."

#. log2.name
msgid "log2"
msgstr "log2"

#. log2.doc
msgid ""
"log2(x)\n"
"\n"
"Return the base 2 logarithm of x."
msgstr ""
"log2 (x)\n"
"\n"
"Devuelve el logaritmo base 2 de x."

#. max.name
msgid "max"
msgstr "máximo"

#. max.doc
msgid ""
"max(iterable, *[, default=obj, key=func]) -> value\n"
"max(arg1, arg2, *args, *[, key=func]) -> value\n"
"\n"
"With a single iterable argument, return its biggest item. The\n"
"default keyword-only argument specifies an object to return if\n"
"the provided iterable is empty.\n"
"With two or more arguments, return the largest argument."
msgstr ""
"max (iterable, * [, default = obj, key = func]) -> valor max (arg1, arg2, * "
"args, * [, clave = func]) -> valor\n"
"\n"
"Con un único argumento iterable, devuelva su elemento más grande. El "
"argumento por defecto solo de palabra clave especifica un objeto a devolver "
"si el iterable proporcionado está vacío. Con dos o más argumentos, devuelva "
"el argumento más grande."

#. min.name
msgid "min"
msgstr "min"

#. min.doc
msgid ""
"min(iterable, *[, default=obj, key=func]) -> value\n"
"min(arg1, arg2, *args, *[, key=func]) -> value\n"
"\n"
"With a single iterable argument, return its smallest item. The\n"
"default keyword-only argument specifies an object to return if\n"
"the provided iterable is empty.\n"
"With two or more arguments, return the smallest argument."
msgstr ""
"min (iterable, * [, default = obj, key = func]) -> valor min (arg1, arg2, * "
"args, * [, clave = func]\n"
"\n"
"Con un único argumento iterable, devuelva su elemento más pequeño. El "
"argumento por defecto solo de palabra clave especifica un objeto a devolver "
"si el iterable proporcionado está vacío. Con dos o más argumentos, devuelva "
"el argumento más pequeño."

#. sum.name
msgid "sum"
msgstr "suma"

#. sum.doc
msgid ""
"Return the sum of a 'start' value (default: 0) plus an iterable of numbers\n"
"\n"
"When the iterable is empty, return the start value.\n"
"This function is intended specifically for use with numeric values and may\n"
"reject non-numeric types."
msgstr ""
"Devuelve la suma de un valor 'start' (por defecto: 0) más un iterable de "
"números\n"
"\n"
"Cuando el iterable está vacío, devuelva el valor inicial. Esta función está "
"diseñada específicamente para su uso con valores numéricos y puede rechazar "
"tipos no numéricos."

#. product.name
msgid "product"
msgstr "producto"

#. product.doc
msgid "Return the product of all numbers in the sequence."
msgstr "Devuelva el producto de todos los números en la secuencia."

#. product.args
msgid "seq, start, result, x"
msgstr "seq, comienzo, resultado, _x"

#. abs.name
msgid "abs"
msgstr "abdominales"

#. abs.doc
msgid "Return the absolute value of the argument."
msgstr "Devuelve el valor absoluto del argumento."

#. round.name
msgid "round"
msgstr "redondo"

#. round.doc
msgid ""
"round(number[, ndigits]) -> number\n"
"\n"
"Round a number to a given precision in decimal digits (default 0 digits).\n"
"This returns an int when called with one argument, otherwise the\n"
"same type as the number. ndigits may be negative."
msgstr ""
"round (número [, ndigits]) -> número\n"
"\n"
"Redondea un número con una precisión dada en dígitos decimales "
"(predeterminado 0 dígitos). Esto devuelve un int cuando se llama con un "
"argumento, de lo contrario el mismo tipo que el número. Ndígitos pueden ser "
"negativos."

#. ceil.name
msgid "ceil"
msgstr "hacer_techo"

#. ceil.doc
msgid ""
"ceil(x)\n"
"\n"
"Return the ceiling of x as an Integral.\n"
"This is the smallest integer >= x."
msgstr ""
"ceil (x)\n"
"\n"
"Devuelve el techo de x como un Integral. Este es el entero menor> = x."

#. trunc.name
msgid "trunc"
msgstr "trunc"

#. trunc.doc
msgid ""
"trunc(x:Real) -> Integral\n"
"\n"
"Truncates x to the nearest Integral toward 0. Uses the __trunc__ magic "
"method."
msgstr ""
"trunc (x: Real) -> Integral\n"
"\n"
"Trunca x al Integral más cercano hacia 0. Utiliza el método mágico __trunc__."

#. random.name
msgid "random"
msgstr "aleatorio"

#. random.doc
msgid "random() -> x in the interval [0, 1)."
msgstr "random () -> x en el intervalo [0, 1]."

#. randint.name
msgid "randint"
msgstr "randint"

#. randint.doc
msgid "Return random integer in range [a, b], including both end points."
msgstr ""
"Devuelve un entero aleatorio en el rango [a, b], incluyendo ambos puntos "
"finales."

#. vec.name
msgid "vec"
msgstr "vec"

#. vec.doc
msgid "Return a vector with the given (x, y) components."
msgstr "Devuelve un vector con los componentes dado (x, y)."

#. vec.args
msgid "x, y"
msgstr "x, y"

#. dot.name
msgid "dot"
msgstr "punto"

#. dot.doc
msgid "The dot product (scalar product) of two vectors."
msgstr "El producto punto (producto escalar) de dos vectores."

#. dot.args
msgid "u, v"
msgstr "usted, v"

#. Vec.name
msgid "Vec"
msgstr "Vec"

#. Vec.doc
msgid ""
"A tuple-based 2D vector.\n"
"\n"
"Supports all basic arithmetic operations."
msgstr ""
"Vector 2D basado en tuplas.\n"
"\n"
"Soporta todas las operaciones aritméticas básicas."

#. Vec:count
msgid "count"
msgstr "contar"

#. Vec:from_angle
msgid "from_angle"
msgstr "de_angle"

#. Vec:index
msgid "index"
msgstr "índice"

#. Vec:norm.name
msgid "norm"
msgstr "norma"

#. Vec:norm.doc
msgid "Vector norm."
msgstr "Norma vectorial."

#. Vec:normalized.name
msgid "normalized"
msgstr "normalizado"

#. Vec:normalized.doc
msgid "Return unity vector."
msgstr "Vuelve el vector de la unidad."

#. Vec:perp.name
msgid "perp"
msgstr "perp"

#. Vec:perp.doc
msgid "Returns a perpendicular vector rotated 90 degrees counter clockwise."
msgstr ""
"Devuelve un vector perpendicular girado 90 grados en sentido antihorario."

#. Vec:perp.args
msgid "self, invert"
msgstr "self, invertir"

#. Vec:rotate.name
msgid "rotate"
msgstr "girar"

#. Vec:rotate.doc
msgid "Return rotated vector by the given angle."
msgstr "Devuelve el vector girado por el ángulo dado."

#. Vec:rotate.args
msgid "self, theta, x, y, c, s"
msgstr "self, teta, x, y, c, s"

#. Vec:x
msgid "x"
msgstr "x"

#. Vec:y
msgid "y"
msgstr "y"

#. pi.doc
#. e.doc
msgid ""
"float(x) -> floating point number\n"
"\n"
"Convert a string or number to a floating point number, if possible."
msgstr ""
"float (x) -> número de punto flotante\n"
"\n"
"Convierta una cadena o número a un número de punto flotante, si es posible."

#~ msgid "int"
#~ msgstr "int"

#~ msgid ""
#~ "int(x=0) -> integer\n"
#~ "int(x, base=10) -> integer\n"
#~ "\n"
#~ "Convert a number or string to an integer, or return 0 if no arguments\n"
#~ "are given.  If x is a number, return x.__int__().  For floating point\n"
#~ "numbers, this truncates towards zero.\n"
#~ "\n"
#~ "If x is not a number or if base is given, then x must be a string,\n"
#~ "bytes, or bytearray instance representing an integer literal in the\n"
#~ "given base.  The literal can be preceded by '+' or '-' and be surrounded\n"
#~ "by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\n"
#~ "Base 0 means to interpret the base from the string as an integer "
#~ "literal.\n"
#~ ">>> int('0b100', base=0)\n"
#~ "4"
#~ msgstr ""
#~ "int (x = 0) -> entero int (x, base = 10) -> entero\n"
#~ "\n"
#~ "Convierta un número o una cadena en un número entero, o devuelva 0 si no "
#~ "se proporcionan argumentos. Si x es un número, devuelve x .__ int __ (). "
#~ "Para números en coma flotante, esto trunca hacia cero.\n"
#~ "\n"
#~ "Si x no es un número o si se da base, entonces x debe ser una cadena, "
#~ "bytes o bytearray instancia que representa un literal entero en la base "
#~ "dada. El literal puede ser precedido por '+' o '-' y estar rodeado de "
#~ "espacios en blanco. La base predeterminada es 10. Las bases válidas son 0 "
#~ "y 2-36. Base 0 significa interpretar la base de la cadena como un literal "
#~ "entero. >>> int ('0b100', base = 0) 4"

#~ msgid "bit_length"
#~ msgstr "longitud de bit"

#~ msgid "conjugate"
#~ msgstr "conjugado"

#~ msgid "denominator"
#~ msgstr "denominador"

#~ msgid "from_bytes"
#~ msgstr "de_bytes"

#~ msgid "imag"
#~ msgstr "imag"

#~ msgid "numerator"
#~ msgstr "numerador"

#~ msgid "real"
#~ msgstr "real"

#~ msgid "to_bytes"
#~ msgstr "a_bytes"

#~ msgid "float"
#~ msgstr "flotador"

#~ msgid "as_integer_ratio"
#~ msgstr "as_integer_ratio"

#~ msgid "fromhex"
#~ msgstr "desde el sexo"

#~ msgid "hex"
#~ msgstr "maleficio"

#~ msgid "is_integer"
#~ msgstr "es un entero"

#~ msgid "complex"
#~ msgstr "complejo"

#~ msgid ""
#~ "complex(real[, imag]) -> complex number\n"
#~ "\n"
#~ "Create a complex number from a real part and an optional imaginary part.\n"
#~ "This is equivalent to (real + imag*1j) where imag defaults to 0."
#~ msgstr ""
#~ "complejo (real [, imag]) -> número complejo\n"
#~ "\n"
#~ "Cree un número complejo a partir de una parte real y una parte imaginaria "
#~ "opcional. Esto es equivalente a (real + imag * 1j) donde imag por defecto "
#~ "a 0."

#~ msgid "bool"
#~ msgstr "bool"

#~ msgid ""
#~ "bool(x) -> bool\n"
#~ "\n"
#~ "Returns True when the argument x is true, False otherwise.\n"
#~ "The builtins True and False are the only two instances of the class "
#~ "bool.\n"
#~ "The class bool is a subclass of the class int, and cannot be subclassed."
#~ msgstr ""
#~ "bool (x) -> bool\n"
#~ "\n"
#~ "Devuelve True cuando el argumento x es verdadero, Falso en caso "
#~ "contrario. Las estructuras True y False son las dos únicas instancias de "
#~ "la clase bool. La clase bool es una subclase de la clase int, y no se "
#~ "puede subclasificar."

#~ msgid "bin"
#~ msgstr "compartimiento"

#~ msgid ""
#~ "Return the binary representation of an integer.\n"
#~ "\n"
#~ ">>> bin(2796202)\n"
#~ "'0b1010101010101010101010'"
#~ msgstr ""
#~ "Devuelve la representación binaria de un entero.\n"
#~ "\n"
#~ ">>> bin (2796202) '0b1010101010101010101010'"

#~ msgid "oct"
#~ msgstr "oct"

#~ msgid ""
#~ "Return the octal representation of an integer.\n"
#~ "\n"
#~ ">>> oct(342391)\n"
#~ "'0o1234567'"
#~ msgstr ""
#~ "Devuelve la representación octal de un entero.\n"
#~ "\n"
#~ ">>> oct (342391) '0o1234567'"

#~ msgid ""
#~ "Return the hexadecimal representation of an integer.\n"
#~ "\n"
#~ ">>> hex(12648430)\n"
#~ "'0xc0ffee'"
#~ msgstr ""
#~ "Devuelve la representación hexadecimal de un entero.\n"
#~ "\n"
#~ ">>> hex (12648430) '0xc0ffee'"

#~ msgid "chr"
#~ msgstr "chr"

#~ msgid ""
#~ "Return a Unicode string of one character with ordinal i; 0 <= i <= "
#~ "0x10ffff."
#~ msgstr ""
#~ "Devuelve una cadena Unicode de un carácter con ordinal i; 0 <= i <= "
#~ "0x10ffff."

#~ msgid "<lambda>"
#~ msgstr "<lambda>"

#~ msgid "x, start"
#~ msgstr "x, comienzo"

#~ msgid "len"
#~ msgstr "len"

#~ msgid "Return the number of items in a container."
#~ msgstr "Devuelve el número de elementos en un contenedor."

#~ msgid "sorted"
#~ msgstr "clasificado"

#~ msgid ""
#~ "Return a new list containing all items from the iterable in ascending "
#~ "order.\n"
#~ "\n"
#~ "A custom key function can be supplied to customize the sort order, and "
#~ "the\n"
#~ "reverse flag can be set to request the result in descending order."
#~ msgstr ""
#~ "Devuelve una nueva lista que contiene todos los elementos de la iterable "
#~ "en orden ascendente.\n"
#~ "\n"
#~ "Se puede suministrar una función de tecla personalizada para personalizar "
#~ "el orden de clasificación y se puede configurar el indicador inverso para "
#~ "solicitar el resultado en orden descendente."

#~ msgid "dict"
#~ msgstr "diccionarios_de_idiomas"

#~ msgid ""
#~ "dict() -> new empty dictionary\n"
#~ "dict(mapping) -> new dictionary initialized from a mapping object's\n"
#~ "    (key, value) pairs\n"
#~ "dict(iterable) -> new dictionary initialized as if via:\n"
#~ "    d = {}\n"
#~ "    for k, v in iterable:\n"
#~ "        d[k] = v\n"
#~ "dict(**kwargs) -> new dictionary initialized with the name=value pairs\n"
#~ "    in the keyword argument list.  For example:  dict(one=1, two=2)"
#~ msgstr ""
#~ "dict () -> nuevo diccionario vacío dict (mapping) -> nuevo diccionario "
#~ "inicializado desde un objeto de asignación\n"
#~ "    (Clave, valor) pairs dict (iterable) -> nuevo diccionario "
#~ "inicializado como si via:\n"
#~ "    D\n"
#~ "    Para k, v en iterable:\n"
#~ "        D [k] = v dict (** kwargs) -> nuevo diccionario inicializado con "
#~ "el nombre = pares de valores\n"
#~ "    En la lista de argumentos de palabras clave. Por ejemplo: dict (uno = "
#~ "1, dos = 2)"

#~ msgid "copy"
#~ msgstr "dupdo"

#~ msgid "fromkeys"
#~ msgstr "de las claves"

#~ msgid "get"
#~ msgstr "obtener"

#~ msgid "items"
#~ msgstr "artículos"

#~ msgid "keys"
#~ msgstr "llaves"

#~ msgid "popitem"
#~ msgstr "popitem"

#~ msgid "setdefault"
#~ msgstr "establecer predeterminado"

#~ msgid "update"
#~ msgstr "actualizar"

#~ msgid "values"
#~ msgstr "valores"

#~ msgid "tuple"
#~ msgstr "tupla"

#~ msgid ""
#~ "tuple() -> empty tuple\n"
#~ "tuple(iterable) -> tuple initialized from iterable's items\n"
#~ "\n"
#~ "If the argument is a tuple, the return value is the same object."
#~ msgstr ""
#~ "tupla () -> tupla vacía tupla (iterable) -> tupla inicializada de "
#~ "elementos iterables\n"
#~ "\n"
#~ "Si el argumento es una tupla, el valor de retorno es el mismo objeto."

#~ msgid "list"
#~ msgstr "lista"

#~ msgid ""
#~ "list() -> new empty list\n"
#~ "list(iterable) -> new list initialized from iterable's items"
#~ msgstr ""
#~ "list () -> nueva lista de lista vacía (iterable) -> nueva lista "
#~ "inicializada de iterable's items"

#~ msgid "extend"
#~ msgstr "ampliar"

#~ msgid "insert"
#~ msgstr "insertar"

#~ msgid "remove"
#~ msgstr "retirar"

#~ msgid "reverse"
#~ msgstr "marcha atrás"

#~ msgid "sort"
#~ msgstr "ordenar"

#~ msgid "str"
#~ msgstr "str"

#~ msgid ""
#~ "str(object='') -> str\n"
#~ "str(bytes_or_buffer[, encoding[, errors]]) -> str\n"
#~ "\n"
#~ "Create a new string object from the given object. If encoding or\n"
#~ "errors is specified, then the object must expose a data buffer\n"
#~ "that will be decoded using the given encoding and error handler.\n"
#~ "Otherwise, returns the result of object.__str__() (if defined)\n"
#~ "or repr(object).\n"
#~ "encoding defaults to sys.getdefaultencoding().\n"
#~ "errors defaults to 'strict'."
#~ msgstr ""
#~ "str (object = '') -> str str (bytes_or_buffer [, codificación [, "
#~ "errores]]) -> str\n"
#~ "\n"
#~ "Cree un nuevo objeto de cadena del objeto dado. Si se especifica la "
#~ "codificación o los errores, el objeto debe exponer un búfer de datos que "
#~ "se decodificará utilizando la codificación y el controlador de errores "
#~ "dados. De lo contrario, devuelve el resultado del objeto .__ str __ () "
#~ "(si está definido) o repr (object). La codificación predeterminada es sys."
#~ "getdefaultencoding (). Los errores predeterminados son 'estrictos'."

#~ msgid "capitalize"
#~ msgstr "capitalizar"

#~ msgid "casefold"
#~ msgstr "maletín"

#~ msgid "center"
#~ msgstr "centrar"

#~ msgid "encode"
#~ msgstr "codificar"

#~ msgid "endswith"
#~ msgstr "termina con"

#~ msgid "expandtabs"
#~ msgstr "ampliar las tablas"

#~ msgid "find"
#~ msgstr "encontrar"

#~ msgid "format"
#~ msgstr "formato"

#~ msgid "format_map"
#~ msgstr "format_map"

#~ msgid "isalnum"
#~ msgstr "isnum"

#~ msgid "isalpha"
#~ msgstr "isalpha"

#~ msgid "isdecimal"
#~ msgstr "isdecimal"

#~ msgid "isdigit"
#~ msgstr "es un dígito"

#~ msgid "isidentifier"
#~ msgstr "isidentifier"

#~ msgid "islower"
#~ msgstr "es bajo"

#~ msgid "isnumeric"
#~ msgstr "isnumeric"

#~ msgid "isspace"
#~ msgstr "isspace"

#~ msgid "istitle"
#~ msgstr "es el título"

#~ msgid "isupper"
#~ msgstr "es mejor"

#~ msgid "ljust"
#~ msgstr "solo"

#~ msgid "lower"
#~ msgstr "inferior"

#~ msgid "lstrip"
#~ msgstr "lstrip"

#~ msgid "maketrans"
#~ msgstr "maketrans"

#~ msgid "partition"
#~ msgstr "dividir"

#~ msgid "replace"
#~ msgstr "reemplazar"

#~ msgid "rfind"
#~ msgstr "rfind"

#~ msgid "rindex"
#~ msgstr "rindex"

#~ msgid "rjust"
#~ msgstr "justo"

#~ msgid "rpartition"
#~ msgstr "partición"

#~ msgid "rsplit"
#~ msgstr "rsplit"

#~ msgid "rstrip"
#~ msgstr "rstrip"

#~ msgid "split"
#~ msgstr "división"

#~ msgid "splitlines"
#~ msgstr "líneas de división"

#~ msgid "startswith"
#~ msgstr "comienza con"

#~ msgid "strip"
#~ msgstr "tira"

#~ msgid "swapcase"
#~ msgstr "intercambiar"

#~ msgid "title"
#~ msgstr "título"

#~ msgid "translate"
#~ msgstr "traducir"

#~ msgid "upper"
#~ msgstr "superior"

#~ msgid "zfill"
#~ msgstr "zfill"

#~ msgid "type"
#~ msgstr "tipo"

#~ msgid ""
#~ "type(object_or_name, bases, dict)\n"
#~ "type(object) -> the object's type\n"
#~ "type(name, bases, dict) -> a new type"
#~ msgstr ""
#~ "type (object_or_name, bases, dict) tipo (objeto) -> tipo de objeto "
#~ "(nombre, bases, dict) -> un nuevo tipo"

#~ msgid "mro"
#~ msgstr "mro"

#~ msgid ""
#~ "Define the builtin 'help'.\n"
#~ "\n"
#~ "This is a wrapper around pydoc.help that provides a helpful message\n"
#~ "when 'help' is typed at the Python interactive prompt.\n"
#~ "\n"
#~ "Calling help() at the Python prompt starts an interactive help session.\n"
#~ "Calling help(thing) prints help for the python object 'thing'."
#~ msgstr ""
#~ "Defina la \"ayuda\" integrada.\n"
#~ "\n"
#~ "Este es un contenedor alrededor de pydoc.help que proporciona un mensaje "
#~ "útil cuando se escribe \"ayuda\" en el indicador interactivo de Python.\n"
#~ "\n"
#~ "Llamar help () en el indicador de Python inicia una sesión de ayuda "
#~ "interactiva. Llamar ayuda (cosa) imprime ayuda para el objeto 'thing' de "
#~ "python."

#~ msgid "nulo"
#~ msgstr "nulo"

#~ msgid "Nulo"
#~ msgstr "Nulo"
