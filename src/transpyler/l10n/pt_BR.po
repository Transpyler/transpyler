#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: fabiomacedomendes@gmail.com\n"
"POT-Creation-Date: \n"
"PO-Revision-Date: \n"
"Last-Translator: Fábio Mendes <fabiomacedomendes@gmail.com>\n"
"Language-Team: \n"
"Language: pt_BR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"X-Generator: Poedit 2.0.2\n"

#. range.name
msgid "range"
msgstr "intervalo"

#. range.doc
msgid ""
"range(stop) -> range object\n"
"range(start, stop[, step]) -> range object\n"
"\n"
"Return an object that produces a sequence of integers from start "
"(inclusive)\n"
"to stop (exclusive) by step.  range(i, j) produces i, i+1, i+2, ..., j-1.\n"
"start defaults to 0, and stop is omitted!  range(4) produces 0, 1, 2, 3.\n"
"These are exactly the valid indices for a list of 4 elements.\n"
"When step is given, it specifies the increment (or decrement)."
msgstr ""
"Retorna uma lista de inteiros. Pode ser chamada de 3 maneiras diferentes:\n"
"\n"
"intervalo(n) -> [0, 1, ..., n - 1]\n"
"intervalo(a, b) -> [a, a + 1, ..., b - 1]\n"
"intervalo(a, b, x) -> [a, a + x, ..., b - 1]\n"
"\n"
"\n"
"Exemplos:\n"
"    >>> intervalo(5)\n"
"    [0, 1, 2, 3, 4]\n"
"    >>> intervalo(2, 5)\n"
"    [2, 3, 4]\n"
"    >>> intervalo(0, 5, 2)\n"
"    [0, 2, 4]"

#. range.args
#. concatenate.args
msgid "args"
msgstr "args"

#. sleep.name
msgid "sleep"
msgstr "dormir"

#. sleep.doc
msgid ""
"sleep(seconds)\n"
"\n"
"Delay execution for a given number of seconds.  The argument may be\n"
"a floating point number for subsecond precision."
msgstr ""
"Dormir (segundos)\n"
"\n"
"Atrasa a execução por um dado número de segundos. O argumento não precisa "
"ser um número inteiro."

#. exit.name
msgid "exit"
msgstr ""
"sair\n"
"saia"

#. exit.doc
msgid "Finish program execution."
msgstr "Concluir a execução do programa."

#. exit.args
msgid "msg"
msgstr "mensagem"

#. concatenate.name
msgid "concatenate"
msgstr ""
"concatenar\n"
"concatene"

#. concatenate.doc
msgid ""
"Convert argument to string and concatenate.\n"
"\n"
"If only one argument is passed, assumes it is a sequence.\n"
"\n"
"Examples:\n"
"    >>> concatenate('x = ', 2)\n"
"    'x = 2'\n"
"    >>> concatenate([1, 2, 3, 4])\n"
"    '1234'"
msgstr ""
"Converte argumentos para string e concatena.\n"
"\n"
"Se somente um argumento for passado, o mesmo é tratado como uma sequência.\n"
"\n"
"Examples:\n"
"    >>> concatenar('x = ', 2)\n"
"    'x = 2'\n"
"    >>> concatenar([1, 2, 3, 4])\n"
"    '1234'"

#. join.name
msgid "join"
msgstr ""
"juntar\n"
"junte"

#. join.doc
msgid ""
"Similar to concatenate(), but takes an extra separator as first argument\n"
"argument.\n"
"\n"
"Examples:\n"
"    >>> join(', ', 1, 2, 3)\n"
"    '1, 2, 3'"
msgstr ""
"Semelhante à concatenar(), mas também recebe um separador extra como "
"argumento.\n"
"\n"
"Examples:\n"
"    >>> juntar(', ', 1, 2, 3)\n"
"    '1, 2, 3'"

#. join.args
msgid "separator, args"
msgstr "separador, args"

#. format_string.name
msgid "format_string"
msgstr ""
"formatar\n"
"formate"

#. format_string.doc
msgid ""
"Format text inserting parameters in the wildcard positions.\n"
"\n"
"There are two different syntax for string formatting. The first is based\n"
"on C and uses symbols such as %s, %f, %d to delimit insertion points.\n"
"\n"
">>> format_string('%i != %.2f', 42, 43)\n"
"'42 != 43.00'\n"
"\n"
"The second uses curly braces.\n"
"\n"
">>> format_string('{0} != {1}', 42, 43)\n"
"'42 != 43'"
msgstr ""
"Formata o texto inserindo os parâmetros dados nas posições coringa.\n"
"\n"
"Existem duas sintaxes diferentes para a formatação de texto. A primeira,\n"
"baseada em C, utiliza o símbolo %s, %f, %d, etc para delimitar os pontos\n"
"de inserção por posição.\n"
"\n"
">>> formatar('%i = %.2f', 42, 42)\n"
"'42 = 42.00'\n"
"\n"
"A segunda usa esta sintaxe (explicar!)\n"
"\n"
">>> formatar('{0} = {1}', 42, 42)\n"
"'42 = 42'"

#. format_string.args
msgid "string, args, kwargs"
msgstr "texto, args, kwargs"

#. print.name
msgid "print"
msgstr ""
"mostrar\n"
"mostre"

#. print.doc
msgid ""
"Prints the object or text provided on the screen.\n"
"\n"
"If called with multiple arguments, prints them in sequence, separating\n"
"them with a white space.\n"
"\n"
"Examples:\n"
"    >>> print(\"Hello world!\")\n"
"    Hello World!"
msgstr ""
"Mostra o objeto ou texto fornecido na tela.\n"
"\n"
"Se chamado com vários argumentos, imprime-os em sequência, separando-os com "
"um espaço em branco.\n"
"\n"
"Exemplos:\n"
"    >>> mostrar(\"Olá mundo!\")\n"
"    Olá Mundo!"

#. print.args
#. alert.args
msgid "args, kwargs"
msgstr "args, kwargs"

#. alert.name
msgid "alert"
msgstr "alerta"

#. alert.doc
msgid ""
"Similar to the `show` function, but displays the resulting message in a\n"
"dialog box."
msgstr ""
"Semelhante à função `mostrar`, mas exibe a mensagem resultante em uma caixa "
"de diálogo."

#. print_formatted.name
msgid "print_formatted"
msgstr "mostrar_formatado"

#. print_formatted.doc
msgid "Displays a string after applying the provided formatting arguments."
msgstr ""
"Exibe uma sequência depois de aplicar os argumentos de formatação fornecidos."

#. print_formatted.args
msgid "text, args, kwargs"
msgstr "texto, args, kwargs"

#. read_text.name
msgid "read_text"
msgstr ""
"ler_texto\n"
"leia_texto"

#. read_text.doc
msgid ""
"Prompts the user for a text entry.\n"
"\n"
"Examples:\n"
"    >>> name = read_text('Your name:')\n"
"    >>> show(\"Hello,\" + name)  # the user types \"Maria\"\n"
"    Hello Maria"
msgstr ""
"Solicita ao usuário uma entrada de texto.\n"
"\n"
"Exemplos:\n"
"    >>> nome = leia_texto('Seu nome:')\n"
"    >>> mostre(\"Olá,\" + nome)  # o usuário digita \"Maria\"\n"
"    Olá Maria"

#. read_text.args
msgid "message"
msgstr "mensagem"

#. read_number.name
msgid "read_number"
msgstr ""
"ler_número\n"
"leia_número"

#. read_number.doc
msgid ""
"Prompts the user for a numeric entry.\n"
"\n"
"Examples:\n"
"    >>> x = read_number('A number:')  # user types 2...\n"
"    >>> x + 40\n"
"    42"
msgstr ""
"Solicita ao usuário uma entrada numérica.\n"
"\n"
"Exemplos:\n"
"    >>> x = leia_número('A number:')  # usuário digita 2\n"
"    >>> x + 40\n"
"    42"

#. read_number.args
msgid "message, text, num"
msgstr "mensagem, texto, num"

#. read_file.name
msgid "read_file"
msgstr ""
"ler_arquivo\n"
"leia_arquivo"

#. read_file.doc
msgid ""
"Reads the content from a text file and returns it as string.\n"
"\n"
"Examples:\n"
"    >>> data = read_file(\"foo.txt\")"
msgstr ""
"Lê o conteúdo de um arquivo de texto e o retorna como sequência de "
"caracteres.\n"
"\n"
"Exemplos:\n"
"    >>> data = leia_arquivo(\"foo.txt\")"

#. read_file.args
msgid "file"
msgstr "arquivo"

#. save_in_file.name
msgid "save_in_file"
msgstr ""
"salvar_em_arquivo\n"
"salve_em_arquivo"

#. save_in_file.doc
msgid ""
"Saves the text content to the indicated file, deleting any previous "
"content.\n"
"\n"
"WARNING! If the given file exists, this function will overwrite your\n"
"content without asking!\n"
"\n"
"Examples:\n"
"    >>> save_in_file(data, \"foo.txt\")"
msgstr ""
"Salva o conteúdo de texto no arquivo indicado, excluindo qualquer conteúdo "
"anterior.\n"
"\n"
"ATENÇÃO! Se o arquivo existir, esta função substituirá seu conteúdo sem "
"avisar!\n"
"\n"
"Examples:\n"
"    >>> salvar_em_arquivo(dados, \"foo.txt\")"

#. save_in_file.args
msgid "text, file, F"
msgstr "texto, arquivo, F"

#. pause.name
msgid "pause"
msgstr ""
"pausar\n"
"pause\n"
"pausa"

#. pause.doc
msgid "Stops execution until the user presses the <return> key."
msgstr "Interrompe a execução até que o usuário pressione a tecla <enter>."

#. Turtle.name
msgid "Turtle"
msgstr "Tuga"

#. Turtle.doc
msgid ""
"Turtle representation on client.\n"
"\n"
"Client knows the pos, heading, avatar and a dictionary of arbitrary meta\n"
"values. The client holds a reference to a connection and each method simply\n"
"sends messages through this connection object."
msgstr "Uma nova instância do Tuga para desenhar na tela."

#. Turtle:back.name
#. Turtle:backward.name
#. Turtle:bk.name
#. backward.name
msgid "backward"
msgstr "trás"

#. Turtle:back.doc
#. Turtle:backward.doc
#. Turtle:bk.doc
#. backward.doc
msgid ""
"Move the turtle backward by the given step size (in pixels).\n"
"\n"
"Aliases: backward | back | bk"
msgstr "Move o Tuga para trás pelo passo fornecido em pixels."

#. Turtle:back.args
#. Turtle:backward.args
#. Turtle:bk.args
#. Turtle:fd.args
#. Turtle:forward.args
msgid "self, step"
msgstr "self, passo"

#. Turtle:clear.name
#. clear.name
msgid "clear"
msgstr "limpar"

#. Turtle:clear.doc
#. clear.doc
msgid "Clear all drawings made by turtle."
msgstr "Limpa todos os desenhos feitos pelo tuga."

#. Turtle:clear.args
#. Turtle:getavatar.args
#. Turtle:getcolor.args
#. Turtle:getfillcolor.args
#. Turtle:getheading.args
#. Turtle:getpos.args
#. Turtle:getwidth.args
#. Turtle:hide.args
#. Turtle:isdown.args
#. Turtle:ishidden.args
#. Turtle:isvisible.args
#. Turtle:pd.args
#. Turtle:pendown.args
#. Turtle:penup.args
#. Turtle:pu.args
#. Turtle:reset.args
#. Turtle:show.args
#. Vec:norm.args
#. Vec:normalized.args
msgid "self"
msgstr "self"

#. Turtle:color
msgid "color"
msgstr "cor"

#. Turtle:drawing
msgid "drawing"
msgstr "desenhando"

#. Turtle:fd.name
#. Turtle:forward.name
#. forward.name
msgid "forward"
msgstr "frente"

#. Turtle:fd.doc
#. Turtle:forward.doc
#. forward.doc
msgid ""
"Move the turtle forward by the given step size (in pixels).\n"
"\n"
"Aliases: forward | fd"
msgstr "Mova o Tuga para frente pelo passo dado em pixels."

#. Turtle:fillcolor
msgid "fillcolor"
msgstr "cor_preenchimento"

#. Turtle:getavatar.name
#. getavatar.name
msgid "getavatar"
msgstr ""
"obter_avatar\n"
"obtenha_avatar"

#. Turtle:getavatar.doc
#. getavatar.doc
msgid "Return a string with the name of the current avatar."
msgstr "Retorna o nome do avatar atual."

#. Turtle:getcolor.name
#. getcolor.name
msgid "getcolor"
msgstr ""
"obter_cor\n"
"obtenha_cor"

#. Turtle:getcolor.doc
#. getcolor.doc
msgid "Return a tuple of (R, G, B) with the current pen color."
msgstr "Retorna  a cor de desenho atual."

#. Turtle:getfillcolor.name
#. getfillcolor.name
msgid "getfillcolor"
msgstr "obter_cor_preenchimento"

#. Turtle:getfillcolor.doc
#. getfillcolor.doc
msgid "Return a tuple of (R, G, B) with the current fill color."
msgstr "Retorna a cor de preenchimento atual."

#. Turtle:getheading.name
#. getheading.name
msgid "getheading"
msgstr ""
"obter_orientação\n"
"obtenha_orientação"

#. Turtle:getheading.doc
#. getheading.doc
msgid "Return current heading of the turtle (in degrees)."
msgstr ""
"Retorna a orientação atual do Tuga (em graus).\n"
"\n"
"O valor de referência consiste na orientação inicial em que o Tuga aponta "
"para a direita."

#. Turtle:getpos.name
#. getpos.name
msgid "getpos"
msgstr ""
"obter_posição\n"
"obtenha_posição"

#. Turtle:getpos.doc
#. getpos.doc
msgid "Return a vector (x, y) with turtle's position (in pixels)."
msgstr "Retorna um vetor (x, y) com a posição do Tuga (em pixels)."

#. Turtle:getwidth.name
#. getwidth.name
msgid "getwidth"
msgstr ""
"obter_espessura\n"
"obtenha_espessura"

#. Turtle:getwidth.doc
#. getwidth.doc
msgid "Return the pen width (in pixels):"
msgstr "Retorna a espessura do traço (em pixels)"

#. Turtle:goto.name
#. goto.name
msgid "goto"
msgstr ""
"ir_para\n"
"vá_para"

#. Turtle:goto.doc
#. goto.doc
msgid ""
"Goes to the given position.\n"
"\n"
"If the pen is down, it draws a line."
msgstr ""
"Vai para a posição dada.\n"
"\n"
"Se a caneta estiver abaixada, desenha uma linha."

#. Turtle:goto.args
#. Turtle:jump.args
#. Turtle:setpos.args
msgid "self, x, y, kwds"
msgstr "self, x, y, kwds"

#. Turtle:heading
msgid "heading"
msgstr "orientação"

#. Turtle:hidden
msgid "hidden"
msgstr "oculto"

#. Turtle:hide.name
#. hide.name
msgid "hide"
msgstr ""
"ocultar\n"
"oculte"

#. Turtle:hide.doc
#. hide.doc
msgid "Hide turtle."
msgstr "Esconda o Tuga."

#. Turtle:isdown.name
#. isdown.name
msgid "isdown"
msgstr "está_abaixado"

#. Turtle:isdown.doc
#. isdown.doc
msgid "Return True if the pen is down or False otherwise."
msgstr ""
"Retorna Verdadeiro se a caneta estiver desativada, ou Falso caso contrário."

#. Turtle:ishidden.name
#. ishidden.name
msgid "ishidden"
msgstr "está_oculto"

#. Turtle:ishidden.doc
#. ishidden.doc
msgid "Return True if the turtle is not visible."
msgstr "Retorna Verdadeiro se o Tuga não estiver visível."

#. Turtle:isvisible.name
#. isvisible.name
msgid "isvisible"
msgstr "está_visível"

#. Turtle:isvisible.doc
#. isvisible.doc
msgid "Return True if the turtle is visible."
msgstr "Retornar Verdadeiro se o Tuga for visível."

#. Turtle:jump.name
#. jump.name
msgid "jump"
msgstr "pular_para"

#. Turtle:jump.doc
#. jump.doc
msgid ""
"Relative movement by the desired position. It *never* draw as line even\n"
"if the pen is down."
msgstr ""
"Faz o Tuga pular pelas coordenadas escolhidas. Esta função *nunca* desenha "
"uma linha, mesmo se a caneta estiver abaixada."

#. Turtle:left.name
#. Turtle:lt.name
#. left.name
msgid "left"
msgstr "esquerda"

#. Turtle:left.doc
#. Turtle:lt.doc
#. left.doc
msgid ""
"Rotate the turtle counter-clockwise by the given angle.\n"
"\n"
"Aliases: left | lt\n"
"\n"
"Negative angles produces clockwise rotation."
msgstr ""
"Gira o Tuga no sentido anti-horário pelo ângulo dado.\n"
"\n"
"Ângulos negativos produzem rotação no sentido horário."

#. Turtle:left.args
#. Turtle:lt.args
#. Turtle:right.args
#. Turtle:rt.args
msgid "self, angle"
msgstr "self, ângulo"

#. Turtle:pd.name
#. Turtle:pendown.name
#. pendown.name
msgid "pendown"
msgstr "abaixar_caneta"

#. Turtle:pd.doc
#. Turtle:pendown.doc
#. pendown.doc
msgid ""
"Lower the turtle pen so it can draw in the screen.\n"
"\n"
"Aliases: pendown | pd"
msgstr ""
"Abaixa a caneta do Tuga para que ele possa desenhar na tela quando se "
"movimentar."

#. Turtle:penup.name
#. Turtle:pu.name
#. penup.name
msgid "penup"
msgstr "levantar_caneta"

#. Turtle:penup.doc
#. Turtle:pu.doc
#. penup.doc
msgid ""
"Raises the turtle pen so it stops drawing.\n"
"\n"
"Aliases: penup | pu"
msgstr ""
"Levanta a caneta do Tuga para que pare de desenhar enquanto se desloca."

#. Turtle:pos
msgid "pos"
msgstr "posição"

#. Turtle:reset.name
#. reset.name
msgid "reset"
msgstr ""
"reiniciar\n"
"reinicie"

#. Turtle:reset.doc
#. reset.doc
msgid "Clear all drawings and reset turtle to initial position."
msgstr "Limpe todos os desenhos e repõe o Tuga na posição inicial."

#. Turtle:right.name
#. Turtle:rt.name
#. right.name
msgid "right"
msgstr "direita"

#. Turtle:right.doc
#. Turtle:rt.doc
#. right.doc
msgid ""
"Rotate the turtle clockwise by the given angle.\n"
"\n"
"Aliases: right | rt\n"
"\n"
"Negative angles produces counter-clockwise rotation. Return final\n"
"heading."
msgstr ""
"Gira a tartaruga no sentido horário pelo ângulo dado.\n"
"\n"
"Os ângulos negativos produzem rotação no sentido anti-horário."

#. Turtle:setavatar.name
#. setavatar.name
msgid "setavatar"
msgstr ""
"definir_avatar\n"
"defina_avatar"

#. Turtle:setavatar.doc
#. setavatar.doc
msgid "Modifies the turtle avatar."
msgstr "Modifica o avatar utilizado pelo Tuga."

#. Turtle:setavatar.args
#. Turtle:setcolor.args
#. Turtle:setfillcolor.args
#. Turtle:setheading.args
#. Turtle:setwidth.args
msgid "self, value"
msgstr "self, valor"

#. Turtle:setcolor.name
#. setcolor.name
msgid "setcolor"
msgstr ""
"definir_cor\n"
"defina_cor"

#. Turtle:setcolor.doc
#. setcolor.doc
msgid ""
"Modifies the pen color.\n"
"\n"
"Color can be specified as an (R, G, B) tuple or as a hex string or by\n"
"name."
msgstr ""
"Modifica a cor do traço.\n"
"\n"
"A cor pode ser especificada como uma tupla (R, G, B) ou pelo nome."

#. Turtle:setfillcolor.name
#. setfillcolor.name
msgid "setfillcolor"
msgstr "setfillcolo"

#. Turtle:setfillcolor.doc
#. setfillcolor.doc
msgid ""
"Modifies the fill color.\n"
"\n"
"Color can be specified as an (R, G, B) tuple or as a hex string or by\n"
"name."
msgstr ""
"Modifica a cor de preenchimento.\n"
"\n"
"A cor pode ser especificada como uma tupla de (R, G, B) ou pelo nome."

#. Turtle:setheading.name
#. setheading.name
msgid "setheading"
msgstr ""
"definir_orientação\n"
"defina_orientação"

#. Turtle:setheading.doc
#. setheading.doc
msgid "Sets turtle's heading (in degrees)."
msgstr "Define a orientação do Tuga (em graus)."

#. Turtle:setpos.name
#. setpos.name
msgid "setpos"
msgstr "definir_posição"

#. Turtle:setpos.doc
#. setpos.doc
msgid ""
"Modifies turtle's position (in pixels)\n"
"\n"
"User can pass the x, y coordinates of the new position or a tuple of\n"
"(x, y) values. This method never draws a line."
msgstr ""
"Modifica a posição do Tuga (em pixels)\n"
"\n"
"É possível passar as coordenadas x, y da nova posição ou uma tupla de "
"valores (x, y). Esta função nunca desenha uma linha."

#. Turtle:setwidth.name
#. setwidth.name
msgid "setwidth"
msgstr "definir_espessura"

#. Turtle:setwidth.doc
#. setwidth.doc
msgid "Modifies the pen width (in pixels)"
msgstr "Modifica a largura do traço (em pixels)"

#. Turtle:show.name
#. show.name
msgid "show"
msgstr ""
"mostrar\n"
"mostre"

#. Turtle:show.doc
#. show.doc
msgid "Shows a hidden turtle."
msgstr "Mostra um Tuga oculto."

#. Turtle:width
msgid "width"
msgstr "espessura"

#. mainturtle.name
msgid "mainturtle"
msgstr "tuga_principal"

#. mainturtle.doc
msgid "Returns the main turtle object."
msgstr "Retorna o Tuga principal."

#. getpos.args
#. setpos.args
#. getheading.args
#. setheading.args
#. getwidth.args
#. setwidth.args
#. getcolor.args
#. setcolor.args
#. getfillcolor.args
#. setfillcolor.args
#. getavatar.args
#. setavatar.args
#. penup.args
#. pendown.args
#. isdown.args
#. isvisible.args
#. ishidden.args
#. hide.args
#. show.args
#. clear.args
#. reset.args
#. goto.args
#. jump.args
#. forward.args
#. backward.args
#. left.args
#. right.args
msgid "args, kwargs, turtle"
msgstr "args, kwargs, tuga"

#. cos.name
msgid "cos"
msgstr ""
"cos\n"
"coseno"

#. cos.doc
msgid "Cosine of an angle (in degrees)"
msgstr "Cosseno de um ângulo (em graus)"

#. cos.args
#. sin.args
#. tan.args
msgid "angle"
msgstr "ângulo"

#. sin.name
msgid "sin"
msgstr "seno"

#. sin.doc
msgid "Sine of an angle (in degrees)"
msgstr "Seno de um ângulo (em graus)"

#. tan.name
msgid "tan"
msgstr "tangente"

#. tan.doc
msgid "Tangent of an angle (in degrees)"
msgstr "Tangente de um ângulo (em graus)"

#. sqrt.name
msgid "sqrt"
msgstr ""
"raiz\n"
"raiz_quadrada"

#. sqrt.doc
msgid ""
"sqrt(x)\n"
"\n"
"Return the square root of x."
msgstr "Retorna a raiz quadrada do argumento."

#. exp.name
msgid "exp"
msgstr ""
"exp\n"
"exponencial"

#. exp.doc
msgid ""
"exp(x)\n"
"\n"
"Return e raised to the power of x."
msgstr "Retorna a exponencial do argumento."

#. log.name
#. ln.name
msgid "log"
msgstr ""
"log\n"
"logaritmo"

#. log.doc
#. ln.doc
#, fuzzy
msgid ""
"log(x[, base])\n"
"\n"
"Return the logarithm of x to the given base.\n"
"If the base not specified, returns the natural logarithm (base e) of x."
msgstr ""
"log (x [, base])\n"
"\n"
"Retornar o logaritmo de x para a base dada. Se a base não especificada, "
"retorna o logaritmo natural (base e) de x."

#. log10.name
msgid "log10"
msgstr "log10"

#. log10.doc
msgid ""
"log10(x)\n"
"\n"
"Return the base 10 logarithm of x."
msgstr "Retorna o logaritmo do argumento na base 10."

#. log2.name
msgid "log2"
msgstr "log2"

#. log2.doc
msgid ""
"log2(x)\n"
"\n"
"Return the base 2 logarithm of x."
msgstr "Retorna o logaritmo do argumento na base 2."

#. max.name
msgid "max"
msgstr "máximo"

#. max.doc
msgid ""
"max(iterable, *[, default=obj, key=func]) -> value\n"
"max(arg1, arg2, *args, *[, key=func]) -> value\n"
"\n"
"With a single iterable argument, return its biggest item. The\n"
"default keyword-only argument specifies an object to return if\n"
"the provided iterable is empty.\n"
"With two or more arguments, return the largest argument."
msgstr ""
"Retorna o maior argumento. Se for chamada com uma sequência como único "
"argumento, retorna o maior item da sequência."

#. min.name
msgid "min"
msgstr "mínimo"

#. min.doc
msgid ""
"min(iterable, *[, default=obj, key=func]) -> value\n"
"min(arg1, arg2, *args, *[, key=func]) -> value\n"
"\n"
"With a single iterable argument, return its smallest item. The\n"
"default keyword-only argument specifies an object to return if\n"
"the provided iterable is empty.\n"
"With two or more arguments, return the smallest argument."
msgstr ""
"Retorna o menor argumento. Se for chamada com uma sequência como único "
"argumento, retorna o menor item da sequência."

#. sum.name
msgid "sum"
msgstr "soma"

#. sum.doc
msgid ""
"Return the sum of a 'start' value (default: 0) plus an iterable of numbers\n"
"\n"
"When the iterable is empty, return the start value.\n"
"This function is intended specifically for use with numeric values and may\n"
"reject non-numeric types."
msgstr "Retorna a soma de todos elementos no argumento."

#. product.name
msgid "product"
msgstr "produto"

#. product.doc
msgid "Return the product of all numbers in the sequence."
msgstr "Retornar o produto de todos os números no argumento."

#. product.args
msgid "seq, start, result, x"
msgstr "seq, começo, resultado, x"

#. abs.name
msgid "abs"
msgstr "módulo"

#. abs.doc
msgid "Return the absolute value of the argument."
msgstr "Retorna o módulo (valor absoluto) do argumento."

#. round.name
msgid "round"
msgstr ""
"arredondar\n"
"arredonde"

#. round.doc
#, fuzzy
msgid ""
"round(number[, ndigits]) -> number\n"
"\n"
"Round a number to a given precision in decimal digits (default 0 digits).\n"
"This returns an int when called with one argument, otherwise the\n"
"same type as the number. ndigits may be negative."
msgstr ""
"round (número [, ndigits]) -> número\n"
"\n"
"Arredonde um número para uma dada precisão em dígitos decimais (padrão 0 "
"dígitos). Isso retorna um int quando chamado com um argumento, caso "
"contrário, o mesmo tipo como o número. Ndigits podem ser negativos."

#. ceil.name
msgid "ceil"
msgstr ""
"arrendondar_para_cima\n"
"arredonde_para_cima"

#. ceil.doc
msgid ""
"ceil(x)\n"
"\n"
"Return the ceiling of x as an Integral.\n"
"This is the smallest integer >= x."
msgstr "Arredonda o argumento para o inteiro imediatamente maior."

#. trunc.name
#, fuzzy
msgid "trunc"
msgstr "trunc"

#. trunc.doc
#, fuzzy
msgid ""
"trunc(x:Real) -> Integral\n"
"\n"
"Truncates x to the nearest Integral toward 0. Uses the __trunc__ magic "
"method."
msgstr ""
"trunc (x: Real) -> Integral\n"
"\n"
"Trunca x para o Integral mais próximo em direção a 0. Usa o método mágico "
"__trunc__."

#. random.name
msgid "random"
msgstr "número_aleatório"

#. random.doc
msgid "random() -> x in the interval [0, 1)."
msgstr "Valor aleatório no intervalo [0, 1)."

#. randint.name
msgid "randint"
msgstr "inteiro_aleatório"

#. randint.doc
#, fuzzy
msgid "Return random integer in range [a, b], including both end points."
msgstr ""
"Retorna o inteiro aleatório no intervalo [a, b], incluindo ambos os pontos "
"finais."

#. vec.name
msgid "vec"
msgstr "vetor"

#. vec.doc
msgid "Return a vector with the given (x, y) components."
msgstr "Cria um vetor com as componentes (x, y) fornecidas."

#. vec.args
msgid "x, y"
msgstr "x, y"

#. dot.name
msgid "dot"
msgstr "produto_escalar"

#. dot.doc
msgid "The dot product (scalar product) of two vectors."
msgstr "O produto escalar de dois vetores."

#. dot.args
msgid "u, v"
msgstr "u, v"

#. Vec.name
msgid "Vec"
msgstr "Vetor"

#. Vec.doc
msgid ""
"A tuple-based 2D vector.\n"
"\n"
"Supports all basic arithmetic operations."
msgstr ""
"Um vetor 2D.\n"
"\n"
"Suporta todas as operações aritméticas básicas."

#. Vec:count
msgid "count"
msgstr "contar"

#. Vec:from_angle
msgid "from_angle"
msgstr "coordenadas_polares"

#. Vec:index
msgid "index"
msgstr "índice"

#. Vec:norm.name
msgid "norm"
msgstr "módulo"

#. Vec:norm.doc
msgid "Vector norm."
msgstr "Norma (tamanho) do vetor."

#. Vec:normalized.name
msgid "normalized"
msgstr "normalizado"

#. Vec:normalized.doc
msgid "Return unity vector."
msgstr "Retorna um vetor unitário na direção do vetor original."

#. Vec:perp.name
msgid "perp"
msgstr "perpendicular"

#. Vec:perp.doc
msgid "Returns a perpendicular vector rotated 90 degrees counter clockwise."
msgstr ""
"Retorna um vetor perpendicular girado 90 graus no sentido anti-horário."

#. Vec:perp.args
msgid "self, invert"
msgstr "self, invertido"

#. Vec:rotate.name
msgid "rotate"
msgstr "girar"

#. Vec:rotate.doc
msgid "Return rotated vector by the given angle."
msgstr "Retorna o vetor girado pelo ângulo dado."

#. Vec:rotate.args
msgid "self, theta, x, y, c, s"
msgstr "self, ângulo, x, y, c, s"

#. Vec:x
msgid "x"
msgstr "x"

#. Vec:y
msgid "y"
msgstr "y"

#. pi.doc
#. e.doc
msgid ""
"float(x) -> floating point number\n"
"\n"
"Convert a string or number to a floating point number, if possible."
msgstr "Converte argumento para um número de ponto flutuante, se possível."

#. exiter.name
msgid "quit"
msgstr "sair"

#. exiter.doc
msgid "Type quit() to leave."
msgstr "Digite sair() para sair."

#. cls.name
msgid "cls"
msgstr ""
"cos\n"
"coseno"

#. cls.doc
msgid "Clear screen"
msgstr "Limpar tela"

#~ msgid "fshow"
#~ msgstr ""
#~ "mostrar_formatado\n"
#~ "mostre_formatado"

#, fuzzy
#~ msgid ""
#~ "int(x=0) -> integer\n"
#~ "int(x, base=10) -> integer\n"
#~ "\n"
#~ "Convert a number or string to an integer, or return 0 if no arguments\n"
#~ "are given.  If x is a number, return x.__int__().  For floating point\n"
#~ "numbers, this truncates towards zero.\n"
#~ "\n"
#~ "If x is not a number or if base is given, then x must be a string,\n"
#~ "bytes, or bytearray instance representing an integer literal in the\n"
#~ "given base.  The literal can be preceded by '+' or '-' and be surrounded\n"
#~ "by whitespace.  The base defaults to 10.  Valid bases are 0 and 2-36.\n"
#~ "Base 0 means to interpret the base from the string as an integer "
#~ "literal.\n"
#~ ">>> int('0b100', base=0)\n"
#~ "4"
#~ msgstr ""
#~ "Int (x = 0) -> integer int (x, base = 10) -> inteiro\n"
#~ "\n"
#~ "Converter um número ou seqüência de caracteres para um inteiro, ou "
#~ "retornar 0 se nenhum argumento for dado. Se x for um número, devolva x ."
#~ "__ int __ (). Para números de ponto flutuante, isto trunca para zero.\n"
#~ "\n"
#~ "Se x não é um número ou se base é dada, então x deve ser uma seqüência de "
#~ "caracteres, bytes ou bytearray instância representando um literal inteiro "
#~ "na base dada. O literal pode ser precedido por '+' ou '-' e ser cercado "
#~ "por espaços em branco. A base padrão é 10. As bases válidas são 0 e 2-36. "
#~ "Base 0 significa interpretar a base da string como um literal inteiro. "
#~ ">>> int ('0b100', base = 0) 4"

#, fuzzy
#~ msgid "bit_length"
#~ msgstr "Comprimento de bit"

#~ msgid "conjugate"
#~ msgstr "conjugado"

#~ msgid "denominator"
#~ msgstr "denominador"

#~ msgid "imag"
#~ msgstr "imaginário"

#~ msgid "numerator"
#~ msgstr "numerador"

#~ msgid "real"
#~ msgstr "real"

#~ msgid "to_bytes"
#~ msgstr "para_bytes"

#~ msgid "float"
#~ msgstr "real"

#~ msgid "as_integer_ratio"
#~ msgstr "razão_de_inteiros"

#~ msgid "fromhex"
#~ msgstr "de_hexadecimal"

#~ msgid "is_integer"
#~ msgstr "é_inteiro"

#~ msgid "complex"
#~ msgstr "complexo"

#~ msgid ""
#~ "complex(real[, imag]) -> complex number\n"
#~ "\n"
#~ "Create a complex number from a real part and an optional imaginary part.\n"
#~ "This is equivalent to (real + imag*1j) where imag defaults to 0."
#~ msgstr ""
#~ "Complexo (real [, imag]) -> número complexo\n"
#~ "\n"
#~ "Crie um número complexo a partir de uma parte real e uma parte imaginária "
#~ "opcional. Equivalente a (real + imag * 1j) em que imag assume o valor "
#~ "padrão de 0."

#~ msgid "bool"
#~ msgstr ""
#~ "booleano\n"
#~ "lógico"

#~ msgid ""
#~ "bool(x) -> bool\n"
#~ "\n"
#~ "Returns True when the argument x is true, False otherwise.\n"
#~ "The builtins True and False are the only two instances of the class "
#~ "bool.\n"
#~ "The class bool is a subclass of the class int, and cannot be subclassed."
#~ msgstr ""
#~ "booleano(x) -> lógico\n"
#~ "\n"
#~ "Converte valor para uma variável lógica (verdadeiro/falso).\n"
#~ "\n"
#~ "Quase todos objetos são avaliados como verdadeiros, exceto:\n"
#~ "* O número zero\n"
#~ "* Uma string, lista, conjunto, dicionário ou tupla vazia\n"
#~ "* A constante Nulo"

#~ msgid "bin"
#~ msgstr "binário"

#~ msgid ""
#~ "Return the binary representation of an integer.\n"
#~ "\n"
#~ ">>> bin(2796202)\n"
#~ "'0b1010101010101010101010'"
#~ msgstr ""
#~ "Retorna a representação binária de um inteiro.\n"
#~ "\n"
#~ ">>> binário(2796202) \n"
#~ "'0b1010101010101010101010'"

#~ msgid ""
#~ "Return the octal representation of an integer.\n"
#~ "\n"
#~ ">>> oct(342391)\n"
#~ "'0o1234567'"
#~ msgstr ""
#~ "Retorna a representação octal de um inteiro.\n"
#~ "\n"
#~ ">>> octal(342391) \n"
#~ "'0o1234567'"

#~ msgid ""
#~ "Return the hexadecimal representation of an integer.\n"
#~ "\n"
#~ ">>> hex(12648430)\n"
#~ "'0xc0ffee'"
#~ msgstr ""
#~ "Retorna a representação hexadecimal de um inteiro.\n"
#~ "\n"
#~ ">>> hexadecimal(12648430) \n"
#~ "'0xc0ffee'"

#~ msgid "chr"
#~ msgstr "caractere"

#~ msgid ""
#~ "Return a Unicode string of one character with ordinal i; 0 <= i <= "
#~ "0x10ffff."
#~ msgstr ""
#~ "Retorna um texto com um único caractere a partir do valor numérico na "
#~ "tabela unicode; \n"
#~ "\n"
#~ "A tabela unicode contêm todos símbolos utilizados em diversas linguagens. "
#~ "O valor de n está na faixa 0 <= n <= 0x10ffff (111411)."

#~ msgid "<lambda>"
#~ msgstr "<lambda>"

#~ msgid "x, start"
#~ msgstr "x, começo"

#~ msgid "len"
#~ msgstr "tamanho"

#~ msgid "Return the number of items in a container."
#~ msgstr "Retorna o número de elementos de um objeto."

#~ msgid "sorted"
#~ msgstr "ordenado"

#~ msgid ""
#~ "Return a new list containing all items from the iterable in ascending "
#~ "order.\n"
#~ "\n"
#~ "A custom key function can be supplied to customize the sort order, and "
#~ "the\n"
#~ "reverse flag can be set to request the result in descending order."
#~ msgstr ""
#~ "Retornar uma nova lista contendo todos os itens do argumento organizados "
#~ "em ordem crescente.\n"
#~ "\n"
#~ "Uma função opcional pode ser fornecida para personalizar a ordem de "
#~ "classificação."

#~ msgid "dict"
#~ msgstr "dicionário"

#, fuzzy
#~ msgid ""
#~ "dict() -> new empty dictionary\n"
#~ "dict(mapping) -> new dictionary initialized from a mapping object's\n"
#~ "    (key, value) pairs\n"
#~ "dict(iterable) -> new dictionary initialized as if via:\n"
#~ "    d = {}\n"
#~ "    for k, v in iterable:\n"
#~ "        d[k] = v\n"
#~ "dict(**kwargs) -> new dictionary initialized with the name=value pairs\n"
#~ "    in the keyword argument list.  For example:  dict(one=1, two=2)"
#~ msgstr ""
#~ "Dict () -> novo dicionário vazio dict (mapping) -> novo dicionário "
#~ "inicializado a partir de um objeto de mapeamento\n"
#~ "    (Chave, valor) pairs dict (iterable) -> novo dicionário inicializado "
#~ "como se via:\n"
#~ "    D = {}\n"
#~ "    Para k, v em iterável:\n"
#~ "        D [k] = v dict (** kwargs) -> novo dicionário inicializado com os "
#~ "pares nome = valor\n"
#~ "    Na lista de argumentos de palavras-chave. Por exemplo: dict (um = 1, "
#~ "dois = 2)"

#~ msgid "copy"
#~ msgstr "cópia"

#, fuzzy
#~ msgid "fromkeys"
#~ msgstr "Das teclas"

#, fuzzy
#~ msgid "get"
#~ msgstr "obter"

#~ msgid "items"
#~ msgstr "itens"

#, fuzzy
#~ msgid "keys"
#~ msgstr "chaves"

#, fuzzy
#~ msgid "popitem"
#~ msgstr "Popitem"

#~ msgid "setdefault"
#~ msgstr "definir_padrão"

#~ msgid "update"
#~ msgstr "atualizar"

#, fuzzy
#~ msgid "values"
#~ msgstr "Valores"

#, fuzzy
#~ msgid "tuple"
#~ msgstr "Tupla"

#, fuzzy
#~ msgid ""
#~ "tuple() -> empty tuple\n"
#~ "tuple(iterable) -> tuple initialized from iterable's items\n"
#~ "\n"
#~ "If the argument is a tuple, the return value is the same object."
#~ msgstr ""
#~ "Tuple () -> tupla vazia tupla (iterável) -> tupla inicializada a partir "
#~ "de itens iteráveis\n"
#~ "\n"
#~ "Se o argumento for uma tupla, o valor de retorno é o mesmo objeto."

#, fuzzy
#~ msgid "list"
#~ msgstr "Lista"

#, fuzzy
#~ msgid ""
#~ "list() -> new empty list\n"
#~ "list(iterable) -> new list initialized from iterable's items"
#~ msgstr ""
#~ "List () -> nova lista de lista vazia (iterável) -> nova lista "
#~ "inicializada a partir de itens de iterable"

#, fuzzy
#~ msgid "extend"
#~ msgstr "ampliar"

#, fuzzy
#~ msgid "insert"
#~ msgstr "inserir"

#, fuzzy
#~ msgid "remove"
#~ msgstr "remover"

#, fuzzy
#~ msgid "reverse"
#~ msgstr "marcha ré"

#, fuzzy
#~ msgid "sort"
#~ msgstr "ordenar"

#, fuzzy
#~ msgid "str"
#~ msgstr "Str"

#, fuzzy
#~ msgid ""
#~ "str(object='') -> str\n"
#~ "str(bytes_or_buffer[, encoding[, errors]]) -> str\n"
#~ "\n"
#~ "Create a new string object from the given object. If encoding or\n"
#~ "errors is specified, then the object must expose a data buffer\n"
#~ "that will be decoded using the given encoding and error handler.\n"
#~ "Otherwise, returns the result of object.__str__() (if defined)\n"
#~ "or repr(object).\n"
#~ "encoding defaults to sys.getdefaultencoding().\n"
#~ "errors defaults to 'strict'."
#~ msgstr ""
#~ "Str (object = '') -> str str (bytes_or_buffer [, codificação [, erros]]) -"
#~ "> str\n"
#~ "\n"
#~ "Crie um novo objeto de seqüência de caracteres a partir do objeto "
#~ "fornecido. Se codificação ou erros for especificado, o objeto deve expor "
#~ "um buffer de dados que será decodificado usando a codificação e "
#~ "manipulador de erro. Caso contrário, retorna o resultado do objeto .__ "
#~ "str __ () (se definido) ou repr (objeto). A codificação padrão é sys."
#~ "getdefaultencoding (). Erros padrão é 'estrito'."

#, fuzzy
#~ msgid "capitalize"
#~ msgstr "capitalizar"

#, fuzzy
#~ msgid "casefold"
#~ msgstr "Caixa"

#, fuzzy
#~ msgid "center"
#~ msgstr "centro"

#, fuzzy
#~ msgid "encode"
#~ msgstr "codificar"

#, fuzzy
#~ msgid "endswith"
#~ msgstr "termina com"

#, fuzzy
#~ msgid "expandtabs"
#~ msgstr "Expandida"

#~ msgid "find"
#~ msgstr "encontrar"

#~ msgid "format"
#~ msgstr ""
#~ "formatar\n"
#~ "formate"

#~ msgid "format_map"
#~ msgstr ""
#~ "formatar_mapa\n"
#~ "formate_mapa"

#, fuzzy
#~ msgid "isalpha"
#~ msgstr "Isalpa"

#, fuzzy
#~ msgid "isdecimal"
#~ msgstr "Isdcimal"

#, fuzzy
#~ msgid "isdigit"
#~ msgstr "É um dígito"

#, fuzzy
#~ msgid "isidentifier"
#~ msgstr "Isidentifier"

#, fuzzy
#~ msgid "islower"
#~ msgstr "é inferior"

#~ msgid "isnumeric"
#~ msgstr "é_numérico"

#, fuzzy
#~ msgid "isspace"
#~ msgstr "Isspace"

#, fuzzy
#~ msgid "istitle"
#~ msgstr "É legítimo"

#, fuzzy
#~ msgid "isupper"
#~ msgstr "É melhor"

#, fuzzy
#~ msgid "ljust"
#~ msgstr "Apenas"

#, fuzzy
#~ msgid "lower"
#~ msgstr "mais baixo"

#, fuzzy
#~ msgid "lstrip"
#~ msgstr "Lstrip"

#, fuzzy
#~ msgid "maketrans"
#~ msgstr "Maketrans"

#, fuzzy
#~ msgid "partition"
#~ msgstr "Partição"

#, fuzzy
#~ msgid "replace"
#~ msgstr "substituir"

#, fuzzy
#~ msgid "rfind"
#~ msgstr "Rfind"

#, fuzzy
#~ msgid "rindex"
#~ msgstr "Rindex"

#, fuzzy
#~ msgid "rjust"
#~ msgstr "Apenas"

#, fuzzy
#~ msgid "rpartition"
#~ msgstr "Repartição"

#, fuzzy
#~ msgid "rsplit"
#~ msgstr "Rsplit"

#, fuzzy
#~ msgid "rstrip"
#~ msgstr "Rstrip"

#~ msgid "split"
#~ msgstr "dividir"

#, fuzzy
#~ msgid "splitlines"
#~ msgstr "Linhas de divisão"

#~ msgid "startswith"
#~ msgstr "começa_com"

#, fuzzy
#~ msgid "strip"
#~ msgstr "faixa"

#, fuzzy
#~ msgid "swapcase"
#~ msgstr "Swapcase"

#, fuzzy
#~ msgid "title"
#~ msgstr "título"

#, fuzzy
#~ msgid "translate"
#~ msgstr "traduzir"

#, fuzzy
#~ msgid "zfill"
#~ msgstr "Zfill"

#~ msgid "type"
#~ msgstr "tipo"

#~ msgid ""
#~ "type(object_or_name, bases, dict)\n"
#~ "type(object) -> the object's type\n"
#~ "type(name, bases, dict) -> a new type"
#~ msgstr ""
#~ "Tipo (object_or_name, bases, dict) tipo (objeto) -> tipo de objeto tipo "
#~ "(nome, bases, dict) -> um novo tip"

#~ msgid "mro"
#~ msgstr "mro"

#, fuzzy
#~ msgid ""
#~ "Define the builtin 'help'.\n"
#~ "\n"
#~ "This is a wrapper around pydoc.help that provides a helpful message\n"
#~ "when 'help' is typed at the Python interactive prompt.\n"
#~ "\n"
#~ "Calling help() at the Python prompt starts an interactive help session.\n"
#~ "Calling help(thing) prints help for the python object 'thing'."
#~ msgstr ""
#~ "Defina a 'ajuda' integrada.\n"
#~ "\n"
#~ "Este é um wrapper em torno de pydoc.help que fornece uma mensagem útil "
#~ "quando 'help' é digitado no prompt interativo do Python.\n"
#~ "\n"
#~ "Chamar help () no prompt Python inicia uma sessão de ajuda interativa. "
#~ "Chamando ajuda (coisa) imprime ajuda para o objeto python 'coisa'."

#, fuzzy
#~ msgid "nulo"
#~ msgstr "Nulo"

#, fuzzy
#~ msgid "Nulo"
#~ msgstr "Nulo"
